name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-ubuntu:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Fetch DataManagement Release Asset
      run: |
        gh release download --repo SyndemicsLab/DataManagement --archive=zip
      env:
        GITHUB_TOKEN: ${{secrets.OAUTH_TOKEN}}
    
    - name: Unzip Asset and Move to Correct Location
      run: |
        unzip *.zip -d DataManagement
    
    - name: Change Directory
      run: |
        cd DataManagement/DataManagement-1.0.0/
        ls

    - name: Move the Files
      run: |
        chmod +x ./install.sh
        sudo ./install.sh
      shell: bash

    - name: Get GCC-12
      run:  sudo apt update && sudo apt install gcc-12 g++-12

    - name: Conan Installation
      id: conan
      uses: turtlebrowser/get-conan@main

    - name: Create default Conan profile
      run: conan profile detect --force

    - name: Clean Build Folder
      run: rm -rf ${{github.workspace}}/build/*

    - name: Conan install dependencies
      working-directory: ${{github.workspace}}
      run:  conan install . --build=missing --settings=build_type=Debug

    - name: Activate Conan VirtualEnv
      working-directory: ${{github.workspace}}/build
      run: source Debug/generators/conanbuild.sh

    # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
    # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type  
    - name: CMake configuration
      working-directory: ${{github.workspace}}/build
      run:  cmake .. -DCMAKE_TOOLCHAIN_FILE=Debug/generators/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTS=ON

    - name: Cmake build
      working-directory: ${{github.workspace}}/build
      run: cmake --build .

    - name: Deactivate Conan VirtualEnv
      working-directory: ${{github.workspace}}/build
      run: source Debug/generators/deactivate_conanbuild.sh

    - name: Cmake test
      working-directory: ${{github.workspace}}/build
      run: ./tests/hepceTest