name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]

    name: Build Release
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4

    - name: Fetch DataManagement Release Asset
      run: gh release download --repo SyndemicsLab/DataManagement -p "dminstall-${{ matrix.os }}.zip"
      env:
        GITHUB_TOKEN: ${{secrets.OAUTH_TOKEN}}

    - name: Unzip Asset and Move to Correct Location
      run: |
        unzip dminstall-${{ matrix.os }}.zip

    - name: Copy dminstall lib
      run: cp -r "dminstall-${{ matrix.os }}/" "${{github.workspace}}/lib/dminstall"

    - name: Get GCC-12
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run:  sudo apt update && sudo apt install gcc-12 g++-12

    - name: Conan Installation
      id: conan
      uses: turtlebrowser/get-conan@main

    - name: Create default Conan profile
      run: conan profile detect --force

    - name: Clean Build Folder
      run: rm -rf ${{github.workspace}}/build/*

    - name: Conan install dependencies
      working-directory: ${{github.workspace}}
      run:  conan install . --build=missing --settings=build_type="$BUILD_TYPE"

    - name: Activate Conan VirtualEnv
      working-directory: ${{github.workspace}}/build
      run: source "$BUILD_TYPE/generators/conanbuild.sh"

    # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
    # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
    - name: CMake configuration
      working-directory: ${{github.workspace}}/build
      run:  cmake .. -DCMAKE_TOOLCHAIN_FILE="$BUILD_TYPE/generators/conan_toolchain.cmake" -DCMAKE_BUILD_TYPE="$BUILD_TYPE" -DBUILD_TESTS=ON

    - name: Cmake build
      working-directory: ${{github.workspace}}/build
      run: cmake --build .

    - name: Deactivate Conan VirtualEnv
      working-directory: ${{github.workspace}}/build
      run: source "$BUILD_TYPE/generators/deactivate_conanbuild.sh"

    - name: Cmake test
      working-directory: ${{github.workspace}}/bin
      run: ./hepceTest
